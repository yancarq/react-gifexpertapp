{"version":3,"sources":["Components/AddCategory.js","helpers/getGifs.js","Components/GifGridItem.js","Components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","setTimeout","useFetchGifs","gif","GifExpertApp","item","index","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAiB9C,OACI,uBAAMC,SAVS,SAACC,GAChBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAU,OAAKP,GAAL,mBAAmBO,OAC3CN,EAAc,MAMlB,UACI,6BAAKD,IACL,uBACIQ,KAAK,OACLC,MAAOT,EACPU,SAnBa,SAACP,GACtBF,EAAcE,EAAEQ,OAAOF,c,+BCPdG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAUH,GAF7C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCCXO,EAAc,SAAC,GAAwB,IAAtBb,EAAqB,EAArBA,IAAKS,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,MAEnC,OADAI,QAAQC,IAAIf,EAAIS,EAAGC,GAEf,sBAAKM,UAAU,yCAAf,UACI,qBAAKC,IAAKjB,EAAKkB,IAAKR,IACpB,4BAAIA,QCFHS,EAAU,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,SAAe,ECFb,SAACA,GAAc,IAAD,EACZd,mBAAS,CAC/BqB,KAAM,GACNe,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAkBtC,OAZAC,qBAAU,WACN1B,EAAQC,GACH0B,MAAK,SAAAhB,GAAG,OACLiB,YAAW,WACPH,EAAS,CACLjB,KAAMG,EACNY,SAAS,MAEf,UAEX,CAACtB,IAEGuB,EDdiBK,CAAa5B,GAA9BO,EAF8B,EAE9BA,KAAMe,EAFwB,EAExBA,QASb,OACI,gCACI,6BAAKtB,IACL,sBAAKkB,UAAU,YAAf,UACKI,GAAW,8CAERf,EAAKE,KAAI,SAAAoB,GAAG,OACR,cAAE,EAAF,eAEQA,GADCA,EAAIlB,cEpBxBmB,EAAe,WAAM,MAGM5C,mBAAS,CAAC,QAHhB,mBAGvBQ,EAHuB,KAGXT,EAHW,KAW9B,OACI,gCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEQS,EAAWe,KAAI,SAACsB,EAAMC,GAAP,OACX,cAAC,EAAD,CAEIhC,SAAU+B,GADLA,YCnBjCE,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.4e071000.chunk.js","sourcesContent":["import React,{useState} from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ( {setCategories} ) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange =(e)=>{\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSumit =(e) =>{\r\n        e.preventDefault();\r\n        if(inputValue.trim().length > 2){\r\n            setCategories(categories => [inputValue,...categories])\r\n            setInputValue('')\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSumit}>\r\n            <h1>{inputValue}</h1>\r\n            <input \r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n                />\r\n            \r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nAddCategory.propTypes = {\r\n    setCategories : PropTypes.func.isRequired,\r\n}","\r\n    export const getGifs = async (category) => {\r\n      \r\n        const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=U4eGyK1HtUJoWIxtPrE6XkDWhikD6QWf`\r\n        const resp = await fetch(url);\r\n        const { data } = await resp.json();\r\n\r\n        const gifs = data.map(img => {\r\n            return {\r\n                id: img.id,\r\n                title: img.title,\r\n                url: img.images?.downsized_medium.url\r\n            }\r\n        });\r\n\r\n        return gifs;\r\n    }\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({ url, id, title }) => {\r\n    console.log(url,id,title)\r\n    return (\r\n        <div className=\"card animate__animated animate__zoomIn\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { getGifs } from '../helpers/getGifs';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const {data, loading} = useFetchGifs(category);\r\n\r\n    // const [images, setImages] = useState([]);\r\n\r\n    // useEffect(() => {\r\n    //     getGifs(category)\r\n    //     .then(img => setImages(img));\r\n    // }, [category]);\r\n\r\n    return (\r\n        <div>\r\n            <h3>{category}</h3>\r\n            <div className=\"card-grid\">\r\n                {loading && <p>Cargando.....</p>}\r\n                {\r\n                    data.map(gif => (\r\n                        < GifGridItem\r\n                            key={gif.id}\r\n                            {...gif} />\r\n                    )\r\n                    )\r\n                }\r\n\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true,\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs(category)\r\n            .then(img =>\r\n                setTimeout(() => {\r\n                    setstate({\r\n                        data: img,\r\n                        loading: false\r\n                    })\r\n                },3000)\r\n            )\r\n    }, [category])\r\n\r\n    return state;\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './Components/AddCategory'\r\nimport { GifGrid } from './Components/GifGrid'\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    //const categories = ['One Punch', 'Samurai X', 'Dragon Ball'];\r\n    const [categories, setCategories] = useState(['cat'])\r\n\r\n    // const handleAdd = () => {\r\n\r\n    //    // setCategories(categories => categories.concat('hunter x hunter'))\r\n    //    setCategories([...categories,'hunter x hunter'])\r\n    // }\r\n\r\n    return (\r\n        <div>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories} />\r\n            <hr />\r\n\r\n            <ol>\r\n                {\r\n                    categories.map((item, index) => (\r\n                        <GifGrid\r\n                            key={item}\r\n                            category={item} />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport { GifExpertApp } from './GifExpertApp';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}